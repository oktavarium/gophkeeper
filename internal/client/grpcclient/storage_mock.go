// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package grpcclient is a generated GoMock package.
package grpcclient

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	models "github.com/oktavarium/gophkeeper/internal/shared/models"
)

// Mockstorage is a mock of storage interface.
type Mockstorage struct {
	ctrl     *gomock.Controller
	recorder *MockstorageMockRecorder
}

// MockstorageMockRecorder is the mock recorder for Mockstorage.
type MockstorageMockRecorder struct {
	mock *Mockstorage
}

// NewMockstorage creates a new mock instance.
func NewMockstorage(ctrl *gomock.Controller) *Mockstorage {
	mock := &Mockstorage{ctrl: ctrl}
	mock.recorder = &MockstorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockstorage) EXPECT() *MockstorageMockRecorder {
	return m.recorder
}

// GetDataEncrypted mocks base method.
func (m *Mockstorage) GetDataEncrypted() (map[string]models.SimpleDataEncrypted, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataEncrypted")
	ret0, _ := ret[0].(map[string]models.SimpleDataEncrypted)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataEncrypted indicates an expected call of GetDataEncrypted.
func (mr *MockstorageMockRecorder) GetDataEncrypted() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataEncrypted", reflect.TypeOf((*Mockstorage)(nil).GetDataEncrypted))
}

// GetToken mocks base method.
func (m *Mockstorage) GetToken() (string, time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(time.Time)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetToken indicates an expected call of GetToken.
func (mr *MockstorageMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*Mockstorage)(nil).GetToken))
}

// UpdateDataEncrypted mocks base method.
func (m *Mockstorage) UpdateDataEncrypted(arg0 map[string]models.SimpleDataEncrypted) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDataEncrypted", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateDataEncrypted indicates an expected call of UpdateDataEncrypted.
func (mr *MockstorageMockRecorder) UpdateDataEncrypted(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDataEncrypted", reflect.TypeOf((*Mockstorage)(nil).UpdateDataEncrypted), arg0)
}

// UpdateToken mocks base method.
func (m *Mockstorage) UpdateToken(arg0 string, arg1 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateToken", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateToken indicates an expected call of UpdateToken.
func (mr *MockstorageMockRecorder) UpdateToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateToken", reflect.TypeOf((*Mockstorage)(nil).UpdateToken), arg0, arg1)
}
